/*
 * Program to display an Nth-line Pascal triangle
 * by applying recursive approach. N = 9
 * @Hieu Pham
 */

public class PascalTriangle
{ 
    public static final int ROWS = 8;
    private static int MAXLENGTH = 0;

    public static void main(String[] args)
    { 
        int[][] pascal  = new int[ROWS +1][];
        pascal[1] = new int[1 + 2];
        pascal[1][1] = 1;
        for (int i = 2; i <= ROWS; i++)
        {
            pascal[i] = new int[i + 2];
            for (int j = 1; j < pascal[i].length - 1; j++)
            {
                pascal[i][j] = pascal[i-1][j-1] + pascal[i-1][j];
                String ConvStr = Integer.toString(pascal[i][j]);
                int stringlen = ConvStr.length();
                if(stringlen > MAXLENGTH)
                    MAXLENGTH = stringlen;
            }
        }

        for (int i = 1; i <= ROWS; i++)
        {                
            for (int k = ROWS; k > i; k--)
                System.out.format("%-" + MAXLENGTH + "s", " ");
            for (int j = 1; j < pascal[i].length - 1; j++)                      
                System.out.format("%-" + (2 * MAXLENGTH) + "s",  pascal[i][j]);
            System.out.println();
        }
    }
}