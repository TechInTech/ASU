import javax.swing.*;import java.awt.*;import java.awt.event.*;import java.util.*;public class GameGUI extends JPanel{  JPanel topPanel = new JPanel();  JPanel DLR_CardPanel = new JPanel();  JPanel pcardPanel = new JPanel();  JTextPane winlosebox = new JTextPane();  JButton hitbutton = new JButton();  JButton dealbutton = new JButton();  JButton staybutton = new JButton();  JButton playagainbutton = new JButton();  JButton quitbutton = new JButton();  JLabel dealerlabel = new JLabel();  JLabel playerlabel = new JLabel();  Playershand E_Dealer = new Playershand();    //to hold the dealer's cards  Playershand player = new Playershand();    //to hold the player's cards  Blackjack game = new Blackjack(E_Dealer,player);   /*************************************************************    the labels to represent the cards for the game  *************************************************************/  JLabel playercard1;  JLabel playercard2;  JLabel playercardhit;  JLabel dealercard0;  JLabel dealercard2;  JLabel dealercard1;  JLabel dealercardhit;  /*************************************************************     Constructs the screen  *************************************************************/  public GameGUI ()   {        topPanel.setBackground(new Color(0, 122, 0));    DLR_CardPanel.setBackground(new Color(0, 122, 0));    pcardPanel.setBackground(new Color(0, 122, 0));        topPanel.setLayout(new FlowLayout());    winlosebox.setText(" ");    winlosebox.setFont(new java.awt.Font("Arial Bold", 1, 20));    dealbutton.setText("  Deal");    dealbutton.addActionListener(new dealbutton());    hitbutton.setText("  Hit");    hitbutton.addActionListener(new hitbutton());    hitbutton.setEnabled(false);    staybutton.setText("  Stay");    staybutton.addActionListener(new staybutton());       staybutton.setEnabled(false);    playagainbutton.setText("  Play Again");    playagainbutton.addActionListener(new playagainbutton());    playagainbutton.setEnabled(false);	quitbutton.setText("  Quit Game");    quitbutton.addActionListener(new quitbutton());    quitbutton.setEnabled(true);         dealerlabel.setText("  E_Dealer:  ");    playerlabel.setText("  Player:  ");    topPanel.add(winlosebox);    topPanel.add(dealbutton);    topPanel.add(hitbutton);    topPanel.add(staybutton);    topPanel.add(playagainbutton);	topPanel.add(quitbutton);    pcardPanel.add(playerlabel);    DLR_CardPanel.add(dealerlabel);        setLayout(new BorderLayout());    add(topPanel,BorderLayout.NORTH);    add(DLR_CardPanel,BorderLayout.CENTER);    add(pcardPanel,BorderLayout.SOUTH);      }//end BlackjackGUI   /*************************************************************     Shows the screen  *************************************************************/  public void display()   {    JFrame myFrame = new JFrame("SER210 Project - Blackjack Game");    myFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);    myFrame.setContentPane(this);    myFrame.setPreferredSize(new Dimension(700,550));    //Display the window.    myFrame.pack();    myFrame.setVisible(true);      }//end display/*************************************************************   DealButton   @param e Deal button pressed*************************************************************/class dealbutton implements ActionListener {   public void actionPerformed(ActionEvent e) {    DLR_CardPanel.add(dealerlabel);    pcardPanel.add(playerlabel);   /**      Get's dealer and player cards from Playershand       and the image associated with that random       card and puts them on the screen.   */        dealercard0 = new JLabel(new ImageIcon("back.jpg"));    game.dealInitialCards();    //to iterate set and get current dealer cards    Card DLR_Card = null;    Iterator<Card> DLR_Scan = (E_Dealer.ThePlayershand).iterator();    int count = 0;    while (DLR_Scan.hasNext())    {        DLR_Card = DLR_Scan.next();        if(count==0)          dealercard1 = new JLabel(DLR_Card.getimage());        else           dealercard2 = new JLabel(DLR_Card.getimage());                  count++;    }    //to iterate set and get current player cards    Iterator<Card> pscan = (player.ThePlayershand).iterator();    count = 0;    while (pscan.hasNext())    {       Card pcard = pscan.next();       if(count==0)         playercard1 = new JLabel(pcard.getimage());       else         playercard2 = new JLabel(pcard.getimage());          count++;    }     DLR_CardPanel.add(dealercard0);    DLR_CardPanel.add(dealercard2);     pcardPanel.add(playercard1);    pcardPanel.add(playercard2);        dealerlabel.setText("  E_Dealer:  "+ DLR_Card.getvalue());    playerlabel.setText("  Player:  " + game.PlayershandValue(player));        hitbutton.setEnabled(true);    staybutton.setEnabled(true);    dealbutton.setEnabled(false);    if(game.blackj())          {       hitbutton.setEnabled(false);       staybutton.setEnabled(false);       dealbutton.setEnabled(false);       playagainbutton.setEnabled(true);       winlosebox.setText("Blackjack - Yeah!");     }    add(DLR_CardPanel,BorderLayout.CENTER);    add(pcardPanel,BorderLayout.SOUTH);  }}//end dealbutton/*************************************************************   HitButton    every time the player wants another card    until Playershand value is over 21.   @param e Hit button pressed*************************************************************/class hitbutton implements ActionListener {   public void actionPerformed(ActionEvent e) {        Card hitcard = game.hit(player);    playercardhit = new JLabel(hitcard.getimage());    pcardPanel.add(playercardhit);    pcardPanel.repaint();     if(game.bust(player))         {      winlosebox.setText("Bust");      hitbutton.setEnabled(false);      dealbutton.setEnabled(false);      staybutton.setEnabled(false);      playagainbutton.setEnabled(true);    }    playerlabel.setText("  Player:   " + game.PlayershandValue(player));  }}//end hitbutton/*************************************************************   StayButton    dealer must hit on 16 or lower. determines the winner,     player wins if under 21 and above dealer.     Tie goes to dealer.   @param e Stay button pressed*************************************************************/class staybutton implements ActionListener {   public void actionPerformed(ActionEvent e) {        DLR_CardPanel.remove(dealercard0);    DLR_CardPanel.add(dealercard1);    E_Dealer = game.dealerPlays();    DLR_CardPanel.removeAll();    DLR_CardPanel.add(dealerlabel);    dealerlabel.setText(" " + dealerlabel.getText());          //iterate through cards and re-display    Card dhitcard = null;    Iterator<Card> scan = (E_Dealer.ThePlayershand).iterator();    while (scan.hasNext())    {        dhitcard = scan.next();        dealercardhit = new JLabel(dhitcard.getimage());        DLR_CardPanel.add(dealercardhit);    }        dealerlabel.setText("E_Dealer: " + game.PlayershandValue(E_Dealer));    playerlabel.setText("Player: " + game.PlayershandValue(player));    winlosebox.setText(game.winner());    hitbutton.setEnabled(false);    staybutton.setEnabled(false);        playagainbutton.setEnabled(true);  }}//end staybutton/*************************************************************   PlayAgainButton    resets screen   @param e Play Again button pressed*************************************************************/class playagainbutton implements ActionListener {   public void actionPerformed(ActionEvent e) {    dealerlabel.setText("E_Dealer: ");    playerlabel.setText("Player: ");    winlosebox.setText("");     E_Dealer = new Playershand();    player = new Playershand();    game=new Blackjack(E_Dealer, player);    DLR_CardPanel.removeAll();    pcardPanel.removeAll();    hitbutton.setEnabled(false);    staybutton.setEnabled(false);    playagainbutton.setEnabled(false);    dealbutton.setEnabled(true);  }}//end playagainbuttonclass quitbutton implements ActionListener {   public void actionPerformed(ActionEvent e)   {	System.exit(0); //Just quit to OS  }}//end quitbutton}//end BlackjackGUI